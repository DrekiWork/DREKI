:: StoryInit [Special] {"position":"100,0","size":"100,100"}
<<silently>>
    /* Setting the variables to what they need to be! */

		/* The cheat flag, determining if you're, y'know, a cheater. Or a tester, I don't judge. */

	<<set $cheat to false>>

		/* Getting the player set up... */
	<<set $player to {
		title : "Founder",
		action : 5,
		health : 10
	}>>
	<<set $ghunt = false>>
	
		/* Number of eggs & how 'old' the eggs are; only keeps track of one of at a time! $theft keeps track of if you've stolen today. */
	<<set $eggsHatched to 0>>
	<<set $eggEvent to 0>>
	<<set $theft to false>>
	
		/* Number of hatchlings & how 'old' they are; same as eggs */
	<<set $firstCol to 0>>
	
		/* Setting nursery buildings... */
	<<set $nest = 0>>
	<<set $eggSpace = ($nest * 3)>>
	
		/* Number of winglets/worker dragons. Slackers aren't employed, foragers go for food... */
	<<set $eggs to []>>
	<<set $hatchlings to []>>
	<<set $winglets to []>>
	<<set $dragons to []>>

		/* Setting up for various little details,,, like exiled / dehydrated / starved dragons deciding to come back, or keeping prisoners... */

	<<set $goneDragons to []>>
	<<set $prisoners to []>>
	
		/* Population count! */
	<<set $pop to 1>>
	
		/* Food, water, trayseur, building supplies...*/
	<<set $food to 0>>
	<<set $water to 0>>
	<<set $gold to 0>>
	<<set $wood to 0>>
	<<set $stone to 0>>

		/* Set up for types of resource storage, and the resource cap... Pool is water, deep cave is food, Dug-out is wood, possibly stone.  */
		/* <<set $storage to {}>> -- for later pondering on if I want to make the storage one single unit. We'll see. */
	<<set $pool to { amount : 1, storage : 30}>>
	<<set $waterCap to ($pool.amount * $pool.storage)>>
	<<set $cavern to { amount : 1, storage : 30}>>
	<<set $foodCap to ($cavern.amount * $cavern.storage)>>
	<<set $dugOut to { amount : 1, storage : 30}>>
	<<set $woodCap to ($dugOut.amount * $dugOut.storage)>>
	<<set $stoneCap to ($dugOut.amount * $dugOut.storage)>>

		/* Setting homes up, I guess? Gonna have to figure out if I want to convert this to a datamap or array or something... ugh. */
	<<set $buildQueue to []>>
	<<set $buildTime to -1>>
	<<set $builderStatus to -1>>
	<<set $shelter to {}>>
	<<set $shelter.ruts to { 
		amount : 0,
		shelter : 1,
		priceS : 5,
		occupied: 0,
		free : 0
		}>>
	<<set $shelter.setts to {
		amount : 0,
		shelter : 1,
		priceS : 5,	
		priceW : 2,
		free : 0,
		occupied : 0
	}>>
	<<set $shelter.hollows to {
		amount : 0,
		shelter : 10,
		priceS : 30,
		priceW : 20,
		buildTime : 3,
		free: 0,
		occupied : 0
	}>>
    <<set $home = (($shelter.ruts.shelter * $shelter.ruts.amount) + ($shelter.setts.shelter * $shelter.setts.amount) + ($shelter.hollows.shelter * $shelter.hollows.amount))>>
	<<set $builtRut = false>>
	<<set $builtSett = false>>

		/* A couple of miscellaneous buildings, as I need them. */
	<<set $building = []>>
		
		/* How many days you've been here, and how many moon cycles! */
	<<set $days to 1>>
    <<set $cycles to 0>>
	
		/* Setting up potential dragon names, personalities, etc... */
	
	<<set $dNames to [
		"Abaddon", "Adula", "Ajax", "Alban", "Alaric", "Alcar", "Alduin", "Altair", "Alvar", "Andor", "Angelus", "Apara", "Aragorn", "Arden", "Argus", "Aric", "Asher", "Astor", "Athine", "Aysaelo", "Azizi", 
		"Baeliru", "Bakari", "Baruti", "Blaze", "Boldar", "Boris", "Brantley", "Brigid", "Bruno", 
		"Cadmus", "Caedialo", "Caius", "Camo", "Caspar", "Cedric", "Cigam", "Clay", "Conan", "Copano", "Cosmos", "Cyclone", "Cynder", "Cyprin", "Cyril", "Cyrus", 
		"Damon", "Darius", "Delbin", "Devlin", "Drobit", 
		"Eirlys", "Eleri", "Ember", "Enzo", "Eivias", 
		"Flame", "Flavius", "Fonsworthy", 
		"Galadriel", "Gavin", "Ghidora", "Gildas", "Gildor", "Gimli", "Greyoll", "Grigori", "Gwyneth", "Gunnar", 
		"Halen", "Halvor", "Haldor", "Hexus", "Helgi", 
		"Iola", "Isaak", "Ilmarinen", "Ivor", 
		"Jaren", "Jarvis", "Jed", "Jormungandr", 
		"Kael", "Kasiya", "Kosoko", 
		"Laird", "Lateef", "Legna", "Lindar", "Liraz", "Lirien", "Lutalo", 
		"Magnus", "Makar", "Malefor", "Maximos", "Mazi", "Miasmar", 
		"Nestor", "Nevin", "Nils", 
		"Obasi", "Odahviing", "Oswin", 
		"Paarthurnax", "Pyra", 
		"Rhiannon", "Rhys", "Ragnar", "Ramses", "Revilo", 
		"Sadiki", "Sif", "Seren", "Skipper", "Smaug", "Soot", "Spry", "Spyro", "Storm", "Sunburn", 
		"Tamlin", "Tanwen", "Terrador", "Theodorix", "Thor", "Tirion", "Titan", "Todor", "Tomas", "Torin", "Trondo", "Twister", 
		"Ulric", "Unika", "Ullr", "Urgost", "Useni", 
		"Valen", "Varalys", "Varda", "Vathek", "Volteer", 
		"Woden", "Wren", 
		"Yara", 
		"Zander", "Zane", "Zantor", "Zaren", "Zephyr", "Zinc"
	]>>
	
	<<set $dPers to [
		"absentminded", "abrasive", "aloof", "ambitious", 
		"caring", "chatty", "clever", "confident", "creative", "curious", 
		"dependable", "dreamy", 
		"emotional", "energetic", 
		"formal", "friendly", 
		"generous", "gentle", "greedy", 
		"hardworking", "harsh", 
		"impatient", "independent", "insecure", "intelligent", 
		"lax", "lazy", "loyal", 
		"mellow", "moody", 
		"nervous", "negligent", 
		"organized", "obsessive", 
		"patient", "persistent", "placid", "practical", 
		"quiet", "queer", "quaint", 
		"rational", "resourceful", "responsible", 
		"selfish", "selfless", "sensitive", "skeptical", "spontaneous", 
		"thoughtful", "tolerant", 
		"whimsical", "witty"
	]>>

	<<set $dSize to ["small", "normal", "normal", "normal", "normal", "large"]>>

	<<set $dColor to ["red", "blue", "yellow", "green"]>>

	<<set $dPattern to [
		"freckled", 
		"piebald", 
		"plain", "plain", "plain", "plain", "plain",
		"smooth", 
		"spotted", "striped"
	]>>

	<<set $dVisQuirk to [
		"none", "none", "none", "none", "none", "none", "none", "none", "none", "none", 
		"sharp teeth", "raggedy", "stub-tail", "clean", "dull"
	]>>
	
	<<set $dAge to ["Egg", "Hatchling", "Winglet", "Adult", "Elder"]>>
	
	<<set $dJobs to ["slacker", "forager", "rainier", "builder", "scavenger", "salvager", "soldier"]>>

		/* Setting up some flags... oh boy, flags! */

		/* Default social policies... */
	<<set $findSleep to true>>
	<<set $jobHunt to false>>

		/* General defense stuff... */
	<<set $defenseTalk = false>>
	<<set $defenseTotal = 0>>
	<<set $defenseBuildings = []>>
	<<set $defenseBuildings.palisade = {
		amount : 0,
		max : 10,
		priceS : 30,
		priceW : 50,
		buildTime: 1
	}>>
	<<set $defenseBuildings.moat = {
		amount : 0,
		max : 3,
		creatures : false,
		priceS : 150,
		priceW : 70,
		buildTime : 10
	}>>
	<<set $defenseBuildings.rockfall = {
		amount : 0,
		max : 4,
		priceS : 70,
		priceW : 20,
		buildTime : 3,
		loaded : 0,
		empty : 0
	}>>
	<<set $defenseBuildings.outpost = {
		amount : 0,
		max : 5,
		priceS: 25,
		priceW: 25
	}>>


		/* These set up the Hydra. */
	<<set $hydraSeen to false>>
	<<set $hydraEggTaken to false>>
	<<set $hydraTime = -1>>
	<<set $hydraBeat = false>>

		/* These relate to the lake creatures! */
	<<set $infestedNotice to false>>
	<<set $kelpieExtinction to false>>
<</silently>>

