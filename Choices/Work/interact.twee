:: Interact [WIP] {"position":"400,700","size":"100,100"}
<<nobr>>
	<<textbox "$dragons[$int].name" $dragons[$int].name>><<button "Rename">><<run Engine.show()>><</button>> is one of your dragons. They're a fully grown
	<<if $dragons[$int].appearance.size == "normal">>
		<<print $dragons[$int].appearance.color>>
		<<if $dragons[$int].appearance.pattern == "plain">>
			 dragon.
		<<else>>
			 dragon with a <<print $dragons[$int].appearance.pattern>> pattern across their scales.
		<</if>>
	<<else>>
		abnormally <<print $dragons[$int].appearance.size>> <<print $dragons[$int].appearance.color>> dragon
		<<if $dragons[$int].appearance.pattern == "plain">>
			with no particular pattern on their scales.
		<<else>>
			with <<print $dragons[$int].appearance.pattern>> patterns across their scales.
		<</if>>
	<</if>>
	<<switch $dragons[$int].appearance.visquirk>>
		<<case "sharp teeth">>
			Their canines are especially long, and poke out from their mouth.
		<<case "raggedy">>
			They look perpetually dishevelled.
		<<case "stub-tail">>
			Their tail is notably short, despite having clearly grown in normally.
		<<case "clean">>
			They're particularly well-groomed, with not so much as a chipped claw.
		<<case "dull">>
			Their coloration is notably dull, with very little brightness at all.
		<<default>>
		
	<</switch>>
	Over time, <<print $dragons[$int].name>> has shown themselves to be <<print $dragons[$int].traits>>; you consider them a pretty <<print $dragons[$int].personality>> dragon, overall. 
		<<switch $dragons[$int].origin>>
			<<case "stay">>
				They hatched in your colony, and have been here ever since.
			<<case "wanderer">>
				They arrived to beg for shelter. You're unsure from where they came, but they are part of your colony now.
			<<case "exiled">>
				You once exiled them; they returned to plead lenience, and you granted it.
			<<case "deprived">>
				They left after going without for too long, but returned upon finding the world beyond to be crueler than life in the colony.
		<</switch>>
	<br> <br>

	<<if $dragons[$int].hunger > 1>>
		<<print $dragons[$int].name>> is hungry; they haven't eaten in <<print $dragons[$int].hunger>> days. If they don't eat, they'll leave.
	<<elseif $dragons[$int].hunger == 1>>
		<<print $dragons[$int].name>> didn't eat yesterday; they'll leave in two days if they aren't fed.
	<<else>>
		<<print $dragons[$int].name>> has been well fed.
	<</if>>
	<<if $dragons[$int].thirst > 1>>
		They haven't drunk in <<print $dragons[$int].thirst>> days. If they don't get water, they'll leave.
	<<elseif $dragons[$int].thirst == 1>>
		They didn't get anything to drink yesterday; they'll leave in two days if they aren't given water.
	<<else>>
		They're well-hydrated.
	<</if>>
	<<switch $dragons[$int].home>>
		<<case "none">>
			They don't have a home to themselves yet,
			<<if $home >= 1>>
				but you have some free space. Would you like to assign <<print $dragons[$int].name>> to a 
				<<linkappend "shelter?">>
					<<if $shelter.setts.free >= 1>>
						<<link "Sett">>
							<<addSett>>
						<</link>>
					<</if>>
					<<if $shelter.ruts.free >= 1>>
						<<link "Rut">>
							<<addRut>>
						<</link>>
					<</if>>
					<<if $shelter.hollows.free >= 1>>
						<<link "Hollow">>
							<<addHollow>>
						<</link>>
					<</if>>
				<</linkappend>>
			<<else>>
				nor is there any shelter available. You should probably build more.
			<</if>>
		
		<<case "rut">>
			They're housed in a <<print $dragons[$int].home>>, and live alone. They seem a little cramped in there... You can <<link "kick them out">>
				<<set $dragons[$int].home = "none">>
				<<set $shelter.ruts.free += 1>>
				<<set $shelter.ruts.occupied -= 1>>
				<<run Engine.show()>>
				<</link>> if you like...
		
		<<case "sett">>
			They're housed in a <<print $dragons[$int].home>>, and live alone. There's enough space for them to stretch comfortably, and they've decorated a little. You can <<link "kick them out">>
				<<set $dragons[$int].home = "none">>
				<<set $shelter.setts.free += 1>>
				<<set $shelter.setts.occupied -= 1>>
				<<run Engine.show()>>
				<</link>> if you like...
		<<case "hollow">>
			They're housed in a <<print $dragons[$int].home>>; it's spartan and thoroughly uncomfortable. You can <<link "kick them out">>
				<<set $dragons[$int].home = "none">>
				<<set $shelter.hollows.free += 1>>
				<<set $shelter.hollows.occupied -= 1>>
				<<run Engine.show()>>
				<</link>> if you like...
		<</switch>><br><br>

		<<set _xpKey = $dragons[$int].job + "xp">>
		<<set _xp = Math.round($dragons[$int][_xpKey] * 10)>>

		<<switch $dragons[$int].job>>.
				/* Note: Provide individual flavor for the personalities, IE: */
				/* A social forager would say something like... */
				/* They keep spirits up with chatter while working; they seem to really enjoy their job. */
				/* Or a cynical salvager would say... */
				/* They're ruthlessly efficient in taking tolls; they seem to be especially keen on their work. */
			<<case "builder">>
				<<if $dragons[$int].personality == "industrious" || $dragons[$int].personality == "fastidious" || $dragons[$int].personality == "militaristic">>
					They've worked for <<plural _xp "day" "days">> as a builder, and seem to really enjoy it.
				<<else>>
					They've worked for <<plural _xp "day" "days">> as a builder.
				<</if>>
					<<if _xp >= 50>>
						They've grown into the role, and can rattle off exactly where it should be, what they would need, and how many assisting dragons are necessary for any given structure.
					<<elseif _xp >= 20>>
						They're getting familiar with more complicated techniques, and are growing more sophisticated in their constructions.
					<<elseif _xp >= 10>>
						They've learned how to ensure a building will hold itself together for a while.
					<<else>>
						Their work is rather shaky and haphazard.
					<</if>>

			<<case "forager">>
				<<if $dragons[$int].personality == "dreamy" || $dragons[$int].personality == "idealistic" || $dragons[$int].personality == "social">>
					They've worked for <<plural _xp "day" "days">> as a forager, and seem to really enjoy it.
				<<else>>
					They've worked for <<plural _xp "day" "days">> as a forager.
				<</if>>
					<<if _xp >= 50>>
						They've become an excellent hunter-gatherer, with a wealth of knowledge on the fat of the land.
					<<elseif _xp >= 20>>
						They're competent enough to be trusted gathering fungi now.
					<<elseif _xp >= 10>>
						They've figured out how to use their claws more delicately, and can more reliably bring home their finds.
					<<else>>
						They often accidentally destroy what little they find.
					<</if>>

			<<case "rainier">>
				<<if $dragons[$int].personality == "idealistic" || $dragons[$int].personality == "industrious" || $dragons[$int].personality == "social">>
					They've worked for <<plural _xp "day" "days">> as a rainier, and seem to really enjoy it.
				<<else>>
					They've worked for <<plural _xp "day" "days">> as a rainier.
				<</if>>
					<<if _xp >= 50>>
						They're as comfortable swimming as they are with flying, and can find the smallest of tributaries or the deepest of groundwater.
					<<elseif _xp >= 20>>
						They've adapted well to hauling water, and can reliably predict where it will flow.
					<<elseif _xp >= 10>>
						They're capable of getting clean water now, though hauling it steadily can trip them up.
					<<else>>
						They end up simply splashing around more often than not.
					<</if>>

			<<case "salvager">>
				<<if $dragons[$int].personality == "cynical" || $dragons[$int].personality == "opportunistic" || $dragons[$int].personality == "rebellious">>
					They've worked for <<plural _xp "day" "days">> as a salvager, and seem to really enjoy it.
				<<else>>
					They've worked for <<plural _xp "day" "days">> as a salvager.
				<</if>>
					<<if _xp >= 50>>
						They've developed a sharp eye for shinies; few valuables can hide from their avaricious claws.
					<<elseif _xp >= 20>>
						They're getting used to routing through others' things for even the lightest gleam of gold.
					<<elseif _xp >= 10>>
						They've gotten an idea of what is actually valuable, and what is just a bit shiny.
					<<else>>
						They don't quite have the eye for it yet.
					<</if>>

			<<case "scavenger">>
				<<if $dragons[$int].personality == "cynical" || $dragons[$int].personality == "opportunistic" || $dragons[$int].personality == "dreamy">>
					They've worked for <<plural _xp "day" "days">> as a scavenger, and seem to really enjoy it.
				<<else>>
					They've worked for <<plural _xp "day" "days">> as a scavenger.
				<</if>>
					<<if _xp >= 50>>
						Their talons are worn from carving rock and wood, but their material is often the highest quality in your storage.
					<<elseif _xp >= 20>>
						They're getting used to the hard labor of hauling wood and stone.
					<<elseif _xp >= 10>>
						They've learned how to carve stone into useable material, and have stopped breaking the timber they haul back.
					<<else>>
						They haven't yet learned to tell good material from bad.
					<</if>>

			<<case "slacker">>
				<<if $dragons[$int].personality == "lazy">>
					While all dragons are masters of lazing about, <<print $dragons[$int].name>> is simply unparalleled.
				<<else>>
					As with all dragons, they are an instinctive master of the art of doing nothing.
				<</if>>
			
			<<case "soldier">>
				<<if $dragons[$int].personality == "rebellious" || $dragons[$int].personality == "militaristic">>
					They've worked for <<plural _xp "day" "days">> as a soldier, and seem to really enjoy it.
				<<else>>
					They've worked for <<plural _xp "day" "days">> as a soldier.
				<</if>>
					<<if _xp >= 50>>
						They're so used to being alert that they constantly scan their surroundings, even when off-duty.
					<<elseif _xp >= 20>>
						They've become an adept combatant, and use their authority within the colony confidently.
					<<elseif _xp >= 10>>
						They're adapting to standing on silent guard for hours at a time, though the dark rings around their eyes suggest it's still a challenge.
					<<else>>
						They still hesitate in their duty.
					<</if>>

		<</switch>>

		Would you like to give <<print $dragons[$int].name>> a different job?<br>

		<<for _i = 0; _i < $dJobs.length; _i++>>
			<<run console.log("$jobInfo: " + $jobInfo)>>
			<<capture _i>>
				<<if $dragons[$int].job !== $jobInfo[_i].name>>
					<<set _jobName = $jobInfo[_i].name.toUpperFirst()>>
					<<capture _jobName>>
						<<set _desc = $jobInfo[_i].desc>>
						&emsp;<<link "_jobName">>
							<<set $dragons[$int].job = $jobInfo[_i].name>>
							<<run Engine.show()>>
						<</link>><br>
						&emsp;&emsp;<<print _desc>><br>
					<</capture>>
				<</if>>
			<</capture>>
		<</for>><br>
	
	<<link "Next Dragon">>
		<<if $int >= ($dragons.length - 1)>>
			<<set $int to 0>>
			<<goto "Interact">>
		<<else>>
			<<set $int++>>
			<<goto "Interact">>
		<</if>>
	<</link>><br>
	<<link "Previous Dragon">>
		<<if $int == 0>>
			<<set $int = ($dragons.length - 1)>>
			<<goto "Interact">>
		<<else>>
			<<set $int-->>
			<<goto "Interact">>
		<</if>>
	<</link>><br>
	<<if $dragons[$int].left == "stay">>
		<<linkreplace "Exile">>
			<<set $dragons[$int].left = "exile">>
			They will leave at sunset.
		<</linkreplace>>
	<<else>>
		They will leave at sunset.
	<</if>><br>
	[[Back to Pop|Pop]]
<</nobr>>
