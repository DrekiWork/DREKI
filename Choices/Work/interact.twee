:: Interact [WIP] {"position":"400,700","size":"100,100"}
<<nobr>>
	<<set _name to $dragons[$int].name>>
	<<textbox "$dragons[$int].name" $dragons[$int].name>><<button "Rename">><<run Engine.show()>><</button>> is one of your dragons. They're a fully grown
	<<if $dragons[$int].appearance.size == "normal">>
		<<print $dragons[$int].appearance.color>>
		<<if $dragons[$int].appearance.pattern == "plain">>
			 dragon.
		<<else>>
			 dragon with a <<print $dragons[$int].appearance.pattern>> pattern across their scales.
		<</if>>
	<<else>>
		abnormally <<print $dragons[$int].appearance.size>> <<print $dragons[$int].appearance.color>> dragon
		<<if $dragons[$int].appearance.pattern == "plain">>
			with no particular pattern on their scales.
		<<else>>
			with <<print $dragons[$int].appearance.pattern>> patterns across their scales.
		<</if>>
	<</if>>
	<<switch $dragons[$int].appearance.visquirk>>
		<<case "sharp teeth">>
			Their canines are especially long, and poke out from their mouth.
		<<case "raggedy">>
			They look perpetually dishevelled.
		<<case "stub-tail">>
			Their tail is notably short, despite having clearly grown in normally.
		<<case "clean">>
			They're particularly well-groomed, with not so much as a chipped claw.
		<<case "dull">>
			Their coloration is notably dull, with very little brightness at all.
		<<default>>
		
	<</switch>>
	Over time, <<print $dragons[$int].name>> has shown themselves to be <<print $dragons[$int].personality>>. 
		<<switch $dragons[$int].origin>>
			<<case "stay">>
				They hatched in your colony, and have been here ever since.
			<<case "wanderer">>
				They arrived to beg for shelter. You're unsure from where they came, but they are part of your colony now.
			<<case "exiled">>
				You once exiled them; they returned to plead lenience, and you granted it.
			<<case "deprived">>
				They left after going without for too long, but returned upon finding the world beyond to be crueler than life in the colony.
		<</switch>>
	<br> <br>

	<<if $dragons[$int].hunger > 1>>
		<<print _name>> is hungry; they haven't eaten in <<print $dragons[$int].hunger>> days. If they don't eat, they'll leave.
	<<elseif $dragons[$int].hunger == 1>>
		<<print _name>> didn't eat yesterday; they'll leave in two days if they aren't fed.
	<<else>>
		<<print _name>> has been well fed.
	<</if>>
	<<if $dragons[$int].thirst > 1>>
		They haven't drunk in <<print $dragons[$int].thirst>> days. If they don't get water, they'll leave.
	<<elseif $dragons[$int].thirst == 1>>
		They didn't get anything to drink yesterday; they'll leave in two days if they aren't given water.
	<<else>>
		They're well-hydrated.
	<</if>>
	<<switch $dragons[$int].home>>
		<<case "none">>
			They don't have a home to themselves yet.
			<<if $home >= 1>>
				You have some free space; would you like to assign <<print $dragons[$int].name>> to a 
				<<linkappend "shelter?">>
					<<if $shelter.setts.free >= 1>>
						<<link "Sett">>
							<<addSett>>
						<</link>>
					<</if>>
					<<if $shelter.ruts.free >= 1>>
						<<link "Rut">>
							<<addRut>>
						<</link>>
					<</if>>
					<<if $shelter.hollows.free >= 1>>
						<<link "Hollow">>
							<<addHollow>>
						<</link>>
					<</if>>
				<</linkappend>>
			<<else>>
				There's no shelter available either; you might have to build more.
			<</if>>
		
		<<case "rut">>
			They're housed in a <<print $dragons[$int].home>>, and live alone. They seem a little cramped in there... You can <<link "kick them out">>
				<<set $dragons[$int].home = "none">>
				<<set $shelter.ruts.free += 1>>
				<<set $shelter.ruts.occupied -= 1>>
				<<run Engine.show()>>
				<</link>> if you like...
		
		<<case "sett">>
			They're housed in a <<print $dragons[$int].home>>, and live alone. There's enough space for them to stretch comfortably, and they've decorated a little. You can <<link "kick them out">>
				<<set $dragons[$int].home = "none">>
				<<set $shelter.setts.free += 1>>
				<<set $shelter.setts.occupied -= 1>>
				<<run Engine.show()>>
				<</link>> if you like...
		<<case "hollow">>
			They're housed in a <<print $dragons[$int].home>>; it's spartan and thoroughly uncomfortable. You can <<link "kick them out">>
				<<set $dragons[$int].home = "none">>
				<<set $shelter.hollows.free += 1>>
				<<set $shelter.hollows.occupied -= 1>>
				<<run Engine.show()>>
				<</link>> if you like...
		<</switch>><br> <br>


		<<switch $dragons[$int].job>>.
			<<case "slacker">>
				As with all dragons, they are an instinctive master of the art of doing nothing. Would you like to give <<print $dragons[$int].name>> a job?<br>

				&emsp;<<link "Forager">> <<set $dragons[$int].job to "forager">> <<run Engine.show()>> <</link>><br>
					&emsp;&emsp;Foragers collect food for your colony.<br>
				&emsp;<<link "Rainier">> <<set $dragons[$int].job to "rainier">> <<run Engine.show()>> <</link>><br>
					&emsp;&emsp;Rainiers gather water for your colony.<br>
				&emsp;<<link "Scavenger">> <<set $dragons[$int].job to "scavenger">> <<run Engine.show()>> <</link>><br>
					&emsp;&emsp;Scavengers gather building materials for your colony. They may, rarely, find gold as well... <br>
				&emsp;<<link "Builder">> <<set $dragons[$int].job to "builder">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Builders construct things for the colony.<br>
				&emsp;<<link "Soldier">> <<set $dragons[$int].job to "soldier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Soldiers guard your territory. If they get bored, they might even hunt.<br><br>

			<<case "forager">>
					<<set _xp to Math.round($dragons[$int].foragexp * 10)>>
				They've worked for <<print _xp>> days as a forager.
					<<if _xp >= 50>>
						They're fairly comfortable gathering food by now.
					<<elseif _xp >= 20>>
						They're getting used to foraging.
					<<elseif _xp >= 10>>
						They've learned how to avoid poisonous plants at least.
					<<else>>
						They're pretty new to it.
					<</if>>
					Would you like to change their job?<br>
					&emsp;<<link "Slacker">> <<set $dragons[$int].job to "slacker">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Slackers lounge around the colony, doing nothing.<br>
					&emsp;<<link "Rainier">> <<set $dragons[$int].job to "rainier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Rainiers gather water for your colony.<br>
					&emsp;<<link "Scavenger">> <<set $dragons[$int].job to "scavenger">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Scavengers gather building materials for your colony. They may, rarely, find gold as well...<br>
					&emsp;<<link "Builder">> <<set $dragons[$int].job to "builder">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Builders construct things for the colony.<br>
					&emsp;<<link "Soldier">> <<set $dragons[$int].job to "soldier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Soldiers guard your territory. If they get bored, they might even hunt.<br><br>

			<<case "rainier">>
				<<silently>>
					<<set _xp to Math.round($dragons[$int].rainxp * 10)>>
				<</silently>>
				They've worked for <<print _xp>> days as a rainier.
					<<if _xp >= 50>>
						They're fairly comfortable around water by now.
					<<elseif _xp >= 20>>
						They're getting used to redirecting water.
					<<elseif _xp >= 10>>
						They've at least learned how to avoid muddying up the water.
					<<else>>
						They're pretty new to it.
					<</if>>
					Would you like to change their job?<br>
					&emsp;<<link "Slacker">> <<set $dragons[$int].job to "slacker">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Slackers lounge around the colony, doing nothing.<br>
					&emsp;<<link "Forager">> <<set $dragons[$int].job to "forager">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Foragers collect food for your colony.<br>
					&emsp;<<link "Scavenger">> <<set $dragons[$int].job to "scavenger">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Scavengers gather building materials for your colony. They may, rarely, find gold as well...<br>
					&emsp;<<link "Builder">> <<set $dragons[$int].job to "builder">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Builders construct things for the colony.<br>
					&emsp;<<link "Soldier">> <<set $dragons[$int].job to "soldier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Soldiers guard your territory. If they get bored, they might even hunt.<br><br>

			<<case "scavenger">>
				<<silently>>
					<<set _xp to Math.round($dragons[$int].scavxp * 10)>>
				<</silently>>
				They've worked for <<print _xp>> days as a scavenger.
					<<if _xp >= 50>>
						They're fairly comfortable collecting building materials by now.
					<<elseif _xp >= 20>>
						They're getting used to the hard labor of hauling wood and stone.
					<<elseif _xp >= 10>>
						They've learned how to carve stone into useable material, and have stopped breaking the timber they haul back.
					<<else>>
						They're pretty new to it.
					<</if>>
					Would you like to change their job?<br>
					&emsp;<<link "Slacker">> <<set $dragons[$int].job to "slacker">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Slackers lounge around the colony, doing nothing.<br>
					&emsp;<<link "Forager">> <<set $dragons[$int].job to "forager">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Foragers collect food for your colony.<br>
					&emsp;<<link "Rainier">> <<set $dragons[$int].job to "rainier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Rainiers gather water for your colony.<br>
					&emsp;<<link "Builder">> <<set $dragons[$int].job to "builder">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Builders construct things for the colony.<br>
					&emsp;<<link "Soldier">> <<set $dragons[$int].job to "soldier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Soldiers guard your territory. If they get bored, they might even hunt.<br><br>
			
			<<case "builder">>
				<<silently>>
					<<set _xp to Math.round($dragons[$int].buildxp * 10)>>
				<</silently>>
				They've worked for <<print _xp>> days as a builder.
					<<if _xp >= 50>>
						They're fairly comfortable assembling structures by now.
					<<elseif _xp >= 20>>
						They're getting used to the delicate placement and heavy lifting necessary to construct buildings.
					<<elseif _xp >= 10>>
						They've learned how to ensure a building will hold itself together for a while.
					<<else>>
						They're pretty new to it.
					<</if>>
					Would you like to change their job?<br>
					&emsp;<<link "Slacker">> <<set $dragons[$int].job to "slacker">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Slackers lounge around the colony, doing nothing.<br>
					&emsp;<<link "Forager">> <<set $dragons[$int].job to "forager">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Foragers collect food for your colony.<br>
					&emsp;<<link "Rainier">> <<set $dragons[$int].job to "rainier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Rainiers gather water for your colony.<br>
					&emsp;<<link "Scavenger">> <<set $dragons[$int].job to "scavenger">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Scavengers gather building materials for your colony. They may, rarely, find gold as well...<br>
					&emsp;<<link "Soldier">> <<set $dragons[$int].job to "soldier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Soldiers guard your territory. If they get bored, they might even hunt.<br><br>
			
			<<case "soldier">>
				<<silently>>
					<<set _xp to Math.round($dragons[$int].soldierxp * 10)>>
				<</silently>>
				They've guarded your colony for <<print _xp>> days as a soldier.
					<<if _xp >= 50>>
						They're so used to being alert that they've started pre-emptively checking locations before allowing anyone in.
					<<elseif _xp >= 20>>
						They've adjusted to silently standing guard for hours on end.
					<<elseif _xp >= 10>>
						They're getting some confidence in combat.
					<<else>>
						They're pretty new to their post.
					<</if>>
					Would you like to change their job?<br>
					&emsp;<<link "Slacker">> <<set $dragons[$int].job to "slacker">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Slackers lounge around the colony, doing nothing.<br>
					&emsp;<<link "Forager">> <<set $dragons[$int].job to "forager">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Foragers collect food for your colony.<br>
					&emsp;<<link "Rainier">> <<set $dragons[$int].job to "rainier">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Rainiers gather water for your colony.<br>
					&emsp;<<link "Scavenger">> <<set $dragons[$int].job to "scavenger">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Scavengers gather building materials for your colony. They may, rarely, find gold as well...<br>
					&emsp;<<link "Builder">> <<set $dragons[$int].job to "builder">> <<run Engine.show()>> <</link>><br>
						&emsp;&emsp;Builders construct things for the colony.<br><br>

		<</switch>>
	
	<<link "Next Dragon">>
		<<set $dragons[$int].name to _name>>
		<<if $int gte ($dragons.length - 1)>>
			<<set $int to 0>>
			<<goto "Interact">>
		<<else>>
			<<set $int++>>
			<<goto "Interact">>
		<</if>>
	<</link>><br>
	<<link "Previous Dragon">>
		<<set $dragons[$int].name to _name>>
		<<if $int == 0>>
			<<set $int = ($dragons.length - 1)>>
			<<goto "Interact">>
		<<else>>
			<<set $int-->>
			<<goto "Interact">>
		<</if>>
	<</link>><br>
	<<if $dragons[$int].left == "stay">>
		<<linkreplace "Exile">>
			<<set $dragons[$int].left = "exile">>
			They will leave at sunset.
		<</linkreplace>>
	<<else>>
		They will leave at sunset.
	<</if>><br>
	<<link "Back to Pop" "Pop">><<set $dragons[$int].name to _name>><</link>>
<</nobr>>
